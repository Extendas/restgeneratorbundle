{% block extras_methods %}
    /**
{% block phpdoc_method_header %}
     * @param {{ entity }} ${{ entity|lower }}
     * @param array $parameters
     * @param string $method
     * @return {{ entity }} ${{ entity|lower }}
     * @throws InvalidFormException
{% endblock phpdoc_method_header %}
     */
    private function processForm({{ entity }} ${{ entity|lower }}, array $parameters, $method = "PUT")
    {
        $form = $this->formFactory->create(new {{ entity }}Type(), ${{ entity|lower }}, array('method' => $method));
        $form->submit($parameters, 'PATCH' !== $method);
        if ($form->isValid()) {
            ${{ entity|lower }} = $form->getData();
            $this->om->persist(${{ entity|lower }});
            $this->om->flush();

            return ${{ entity|lower }};
        }
        throw new InvalidFormException('Invalid submitted data', $form);
    }

{% if document %}
    /**
     * @return {{ entity }} ${{ entity|lower }}
     */
{% endif %}
    private function create{{ entity }}()
    {
        return new $this->entityClass();
    }
{% endblock extras_methods %}
